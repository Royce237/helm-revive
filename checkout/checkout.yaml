NAME: checkout
LAST DEPLOYED: Wed Nov 20 12:57:28 2024
NAMESPACE: default
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: checkout/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "checkout-test-connection"
  labels:
    app.kubernetes.io/name: checkout
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['checkout:8080']
  restartPolicy: Never
MANIFEST:
---
# Source: checkout/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkout-service-account
---
# Source: checkout/templates/serviceaccountdb.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkout-db-service-account
---
# Source: checkout/templates/secretdb.yaml
apiVersion: v1
kind: Secret
metadata:
  name: checkout-db-secret
type: Opaque
data:
  REDIS_PASSWORD: cGFzc3dvcmQ=
---
# Source: checkout/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: checkout-config
data:
  ENDPOINTS_ORDERS: http://orders:8080
  REDIS_URL: redis://checkout-db:6379
---
# Source: checkout/templates/configmapdb.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: checkout-db-config
data:
  REDIS_HOST: checkout-db
  REDIS_PORT: "6379"
---
# Source: checkout/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: checkout-db
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app.kubernetes.io/name: checkout-db
---
# Source: checkout/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout-deployment
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: checkout
  template:
    metadata:
      labels:
        app.kubernetes.io/name: checkout
    spec:
      serviceAccountName: checkout-service-account
      containers:
        - name: checkout
          image: "arsenet10/revive-checkout:01"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: checkout-config     # Refer to ConfigMap
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 128Mi
---
# Source: checkout/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: checkout-hpa
  labels:
    app.kubernetes.io/name: checkout
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: checkout-deployment
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    #
---
# Source: checkout/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: checkout-db
spec:
  serviceName: "checkout-db-service"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: checkout-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: checkout-db
    spec:
      serviceAccountName: checkout-db-service-account
      containers:
        - name: checkout-db
          image: "arsenet10/revive-checkout:db-01"
          imagePullPolicy: Always
          ports:
            - containerPort: 6379
          envFrom:
            - configMapRef:
                name: checkout-config     # Refer to ConfigMap
            - secretRef:
                name: 
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          volumeMounts:
            - name: checkout-db-storage
              mountPath: /data                   # Default Redis data directory
  volumeClaimTemplates:
    - metadata:
        name: checkout-db-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi                         # Adjust size based on Redis data needs

NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=checkout,app.kubernetes.io/instance=checkout" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT
